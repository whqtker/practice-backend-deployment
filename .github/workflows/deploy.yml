name: 'deploy'
on:
  push:
    paths:
      - '.github/workflows/**'
      - '.github/configs/**'
      - 'src/**'
      - 'build.gradle'
      - 'Dockerfile'
      - 'README.md'
      - 'infraScript/**'
    branches:
      - 'main'

jobs:
  loadConfig:
    runs-on: ubuntu-latest
    outputs:
      app_name: ${{ steps.set_config.outputs.app_name }}
      deployment_base_dir: ${{ steps.set_config.outputs.deployment_base_dir }}
      script_path: ${{ steps.set_config.outputs.script_path }}
      repo_name: ${{ steps.set_config.outputs.repo_name }}
    steps:
      - uses: actions/checkout@v4
      - name: 설정 파일 로드
        id: set_config
        run: |
          app_name=$(yq '.app.name' .github/configs/deploy-config.yml)
          deployment_base_dir=$(yq '.deployment.base_dir' .github/configs/deploy-config.yml)
          script_path=$(yq '.deployment.script_path' .github/configs/deploy-config.yml)
          repo_name=$(yq '.repository.name' .github/configs/deploy-config.yml)
          
          echo "app_name=$app_name" >> $GITHUB_OUTPUT
          echo "deployment_base_dir=$deployment_base_dir" >> $GITHUB_OUTPUT
          echo "script_path=$script_path" >> $GITHUB_OUTPUT
          echo "repo_name=$repo_name" >> $GITHUB_OUTPUT

  makeTagAndRelease:
    runs-on: ubuntu-latest
    needs: loadConfig
    outputs:
      tag_name: ${{ steps.create_tag.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4
      - name: Create Tag
        id: create_tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.new_tag }}
          release_name: Release ${{ steps.create_tag.outputs.new_tag }}
          body: ${{ steps.create_tag.outputs.changelog }}
          draft: false
          prerelease: false

  buildImageAndPush:
    name: 도커 이미지 빌드와 푸시
    needs: [makeTagAndRelease, loadConfig]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Docker Buildx 설치
        uses: docker/setup-buildx-action@v2
      - name: 레지스트리 로그인
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >> ${GITHUB_ENV}
        env:
          OWNER: "${{ github.repository_owner }}"
      - name: application-secret.yml 생성
        env:
          ACTIONS_STEP_DEBUG: true
          APPLICATION_SECRET: ${{ secrets.APPLICATION_SECRET_YML }}
        run: echo "$APPLICATION_SECRET" > src/main/resources/application-secret.yml
      - name: 빌드 앤 푸시
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/${{ needs.loadConfig.outputs.app_name }}:${{ needs.makeTagAndRelease.outputs.tag_name }},
            ghcr.io/${{ env.OWNER_LC }}/${{ needs.loadConfig.outputs.app_name }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [buildImageAndPush, loadConfig]
    steps:
      - name: AWS SSM Send-Command
        uses: peterkimzz/aws-ssm-send-command@master
        id: ssm
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          instance-ids: ${{ secrets.EC2_INSTANCE_ID }}
          working-directory: /
          comment: Deploy
          command: |
            mkdir -p ${{ needs.loadConfig.outputs.deployment_base_dir }}
            mkdir -p ${{ needs.loadConfig.outputs.deployment_base_dir }}/volumes/gen
            mkdir -p ${{ needs.loadConfig.outputs.deployment_base_dir }}/logs
            
            curl -o ${{ needs.loadConfig.outputs.deployment_base_dir }}/zero_downtime_deploy.py https://raw.githubusercontent.com/${{ github.repository_owner }}/${{ needs.loadConfig.outputs.repo_name }}/main/${{ needs.loadConfig.outputs.script_path }}
            chmod +x ${{ needs.loadConfig.outputs.deployment_base_dir }}/zero_downtime_deploy.py
            sudo python3 ${{ needs.loadConfig.outputs.deployment_base_dir }}/zero_downtime_deploy.py